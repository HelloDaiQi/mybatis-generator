<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 引入数据库配置文件 -->
    <properties resource="application.yml" />

    <!-- mysql驱动的位置 这个是MySQL连接的jar包，你需要指定你自己计算机上的jar包的位置-->
    <classPathEntry location="C:\Users\DaiQi\.m2\repository\mysql\mysql-connector-java\8.0.15\mysql-connector-java-8.0.15.jar" />

    <!-- context:生成一组对象的环境
        id:必选，上下文id，用于在生成错误时提示
        defaultModelType:指定生成对象的样式
            1，conditional(默认)：类似hierarchical；
            2，flat：所有内容（主键，blob）等全部生成在一个对象中(一个java类中)；
            3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
        targetRuntime:
            1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
            2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
        introspectedColumnImpl：类全限定名，用于扩展MBG -->
    <context id="testTables" targetRuntime="MyBatis3" defaultModelType="flat">
        <!-- 指定生成的java文件的编码,没有直接生成到项目时中文可能会乱码 -->
        <property name="javaFileEncoding" value="UTF-8" />
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!-- -Mybatis序列化插件 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <!-- -lomnok注解插件 -->
        <!-- Cannot instantiate object of type com.daiqi.generator.myPlugin.MyLombokPlugin -->
        <plugin type="com.daiqi.generator.myPlugin.MyLombokPlugin" >
            <property name="hasLombok" value="true"/>
        </plugin>

        <!-- 注释 -->
        <commentGenerator type="com.daiqi.generator.myGenerator.MyCommentGenerator">
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <!-- 注意事项： xml中的特殊字符
            &lt;   <  小于号
            &gt;   >  大于号
            &amp;  &  and字符
            &apos; '  单引号
            &quot; "  双引号 -->
        <!-- 数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/generator?characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=GMT%2B8"
                        userId="root" password="123456">
        </jdbcConnection>

        <!-- 默认false，为false时把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，
            为true时把JDBC DECIMAL 和 NUMERIC 类型解析为 java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- targetProject:生成PO类的位置 -->
        <javaModelGenerator targetPackage="com.daiqi.generator.entity" targetProject=".\src\main\java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!-- targetProject:mapper映射文件生成的位置 -->
        <sqlMapGenerator targetPackage="com.daiqi.generator.mapper" targetProject=".\src\main\resources">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <!-- targetPackage：mapper接口生成的位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.daiqi.generator.mapper" targetProject=".\src\main\java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>

        <!-- 指定数据库表 -->
        <table tableName="t_test" domainObjectName="Test"/>

        <!-- 有些表的字段需要指定java类型 -->
        <!-- <table schema="" tableName="">
          <columnOverride column="" javaType="" />
       </table> -->
    </context>
</generatorConfiguration>
